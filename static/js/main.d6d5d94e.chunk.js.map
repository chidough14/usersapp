{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","isModalVisible","setIsModalVisible","editIsModalVisible","setEditIsModalVisible","id","name","user","setUser","editData","setEditData","columns","title","dataIndex","key","render","text","record","size","type","onClick","showEditModal","deleteRecord","filter","item","style","margin","width","marginBottom","dataSource","visible","onOk","console","log","map","onCancel","okButtonProps","disabled","onChange","e","target","value","uuidv1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"0QAyGeA,MAhGf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAoDJ,oBAAS,GAA7D,mBAAOK,EAAP,KAA2BC,EAA3B,KACA,EAAwBN,mBAAS,CAC/BO,GAAI,GACJC,KAAM,KAFR,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAAgCV,mBAAS,CACvCO,GAAI,GACJC,KAAM,KAFR,mBAAOG,EAAP,KAAiBC,EAAjB,KAKMC,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAAAC,GAAI,OAAI,4BAAIA,MAGtB,CACEJ,MAAO,SACPE,IAAK,SACLC,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOC,KAAK,SAAZ,UACE,cAAC,IAAD,CAAQC,KAAK,UAAUC,QAAS,kBAAKC,EAAcL,EAAMC,IAAzD,kBACA,cAAC,IAAD,CAAQE,KAAK,UAAUC,QAAS,kBAAKE,EAAaN,EAAMC,IAAxD,0BAMFI,EAAgB,SAACL,EAAMC,GAC3Bf,GAAkB,GAClBE,GAAsB,GACtBM,EAAY,CAACL,GAAIY,EAAOZ,GAAIC,KAAMW,EAAOX,QAGrCgB,EAAe,SAACN,EAAMC,GAC1BjB,EAAQD,EAAKwB,QAAO,SAAAC,GAAI,OAAIA,EAAKnB,KAAOY,EAAOZ,QAkCjD,OACE,gCACE,sBAAKoB,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SAArC,UACE,cAAC,IAAD,CAAQR,KAAK,UAAUM,MAAO,CAACG,aAAc,QAASR,QAlC1C,WAChBlB,GAAkB,IAiCd,sBACA,cAAC,IAAD,CAAOS,QAASA,EAASkB,WAAY9B,OAGvC,cAAC,IAAD,CACEa,MAAOT,EAAqB,YAAc,WAAY2B,QAAS7B,EAC/D8B,KAAM5B,EAAqB,kBA5BbE,EA4B4BI,EAASJ,GA3BvDD,GAAsB,GACtBF,GAAkB,GAClB8B,QAAQC,IAAIxB,QAEZT,EACID,EAAKmC,KAAI,SAAAV,GAAI,OACTA,EAAKnB,KAAOA,EAAZ,2BACMmB,GADN,IACYlB,KAAOG,EAASH,OAC1BkB,MATO,IAACnB,GANH,WACfL,EAAQ,GAAD,mBAAKD,GAAL,CAAWQ,KAClBL,GAAkB,GAClBM,EAAQ,CAACF,KAAM,MAgCX6B,SAhBe,WACnBjC,GAAkB,GAClBE,GAAsB,GACtBI,EAAQ,CAACF,KAAM,MAcX8B,cAA6B,KAAd7B,EAAKD,MAAgBH,EAAwC,CAACkC,UAAU,GAA9B,CAACA,UAAU,GAJtE,SAME,cAAC,IAAD,CACEC,SAAUnC,EAAqB,SAACoC,GAAD,OAAM7B,EAAY,CAACL,GAAII,EAASJ,GAAIC,KAAMiC,EAAEC,OAAOC,SAAU,SAACF,GAAD,OAAM/B,EAAQ,CAACH,GAAIqC,cAAUpC,KAAMiC,EAAEC,OAAOC,SACxIA,MAAOtC,EAAqBM,EAASH,KAAOC,EAAKD,aCtF5CqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASrC,OACP,cAAC,IAAMsC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d6d5d94e.chunk.js","sourcesContent":["/* import logo from './logo.svg';\nimport './App.css'; */\nimport { Table, Space, Button, Modal, Input } from 'antd'\nimport { useState } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\n\n\n\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [editIsModalVisible, setEditIsModalVisible] = useState(false)\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\"\n  })\n  const [editData, setEditData] = useState({\n    id: \"\",\n    name: \"\"\n  })\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: text => <p>{text}</p>,\n    },\n    \n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <Button type=\"primary\" onClick={()=> showEditModal(text, record)}>Edit</Button>\n          <Button type=\"default\" onClick={()=> deleteRecord(text, record)}>Delete</Button>\n        </Space>\n      ),\n    },\n  ];\n\n  const showEditModal = (text, record) => {\n    setIsModalVisible(true)\n    setEditIsModalVisible(true)\n    setEditData({id: record.id, name: record.name})\n  }\n\n  const deleteRecord = (text, record) => {\n    setData(data.filter(item => item.id !== record.id))\n  }\n\n  const showModal = () => {\n    setIsModalVisible(true)\n  }\n\n  \n\n  const handleOk = () => {\n    setData([...data, user])\n    setIsModalVisible(false)\n    setUser({name: \"\"})\n  }\n\n  const handleEdit = (id) => {\n    setEditIsModalVisible(false)\n    setIsModalVisible(false)\n    console.log(editData)\n\n    setData(\n        data.map(item => \n            item.id === id\n            ? {...item, name : editData.name} \n            : item \n    ))\n  }\n\n  const handleCancel = () => {\n    setIsModalVisible(false)\n    setEditIsModalVisible(false)\n    setUser({name: \"\"})\n  }\n\n  return (\n    <div >\n      <div style={{ margin: \"auto\", width: \"800px\"}}>\n        <Button type=\"primary\" style={{marginBottom: \"20px\"}} onClick={showModal}>Add User</Button>\n        <Table columns={columns} dataSource={data} />\n      </div>\n\n      <Modal \n        title={editIsModalVisible ? \"Edit User\" : \"Add User\"} visible={isModalVisible} \n        onOk={editIsModalVisible ? ()=>handleEdit(editData.id) : handleOk} \n        onCancel={handleCancel}\n        okButtonProps={user.name === \"\" && !editIsModalVisible ? {disabled: true} : {disabled: false}}\n      >\n        <Input \n          onChange={editIsModalVisible ? (e)=> setEditData({id: editData.id, name: e.target.value}) : (e)=> setUser({id: uuidv1(), name: e.target.value})} \n          value={editIsModalVisible ? editData.name : user.name} \n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}